{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\TypingSpeed\\\\components\\\\PlayGame.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayGame = ({\n  onGame,\n  onChangeScore\n}) => {\n  _s();\n  const [defaultData] = useState('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.');\n  const [dataTyping, setDataTyping] = useState([]);\n  const [textTyping, setTextTyping] = useState({\n    value: '',\n    position: 0\n  });\n  useEffect(() => {\n    const addWord = (quantityAdd = 20) => {\n      const arrayDefaultData = defaultData.split(' ');\n      const gamingText = [];\n      for (let index = 0; index < quantityAdd; index++) {\n        const positionRandom = Math.floor(Math.random() * arrayDefaultData.length);\n        gamingText.push({\n          value: arrayDefaultData[positionRandom],\n          status: null\n        });\n      }\n      setDataTyping(gamingText);\n    };\n    if (dataTyping.length === 0 || textTyping.position > dataTyping.length - 1) {\n      addWord();\n      setTextTyping({\n        ...textTyping,\n        position: 0\n      });\n    }\n  }, [textTyping.position]);\n  const handleChangeTyping = e => {\n    const valueInput = e.target.value;\n    if (!valueInput.includes(' ')) {\n      setTextTyping({\n        ...textTyping,\n        value: valueInput\n      });\n    } else if (textTyping.value !== '') {\n      checkResult();\n    }\n  };\n  const checkResult = () => {\n    const dataCheck = dataTyping;\n    if (textTyping.value === dataCheck[textTyping.position].value) {\n      dataCheck[textTyping.position].status = true;\n      onChangeScore(1);\n    } else {\n      dataCheck[textTyping.position].status = false;\n      onChangeScore(-1);\n    }\n    setDataTyping(dataCheck);\n    setTextTyping({\n      value: '',\n      position: textTyping.position + 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playing\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: dataTyping.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: word.status === true ? 'true' : word.status === false ? 'false' : '',\n        children: word.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoFocus: true,\n        value: textTyping.value,\n        onChange: handleChangeTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayGame, \"8+UUjkl6z1wjnsjm55ZXMfoXP9A=\");\n_c = PlayGame;\nexport default PlayGame;\nvar _c;\n$RefreshReg$(_c, \"PlayGame\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","PlayGame","onGame","onChangeScore","_s","defaultData","dataTyping","setDataTyping","textTyping","setTextTyping","value","position","addWord","quantityAdd","arrayDefaultData","split","gamingText","index","positionRandom","Math","floor","random","length","push","status","handleChangeTyping","e","valueInput","target","includes","checkResult","dataCheck","className","children","map","word","fileName","_jsxFileName","lineNumber","columnNumber","type","autoFocus","onChange","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/TypingSpeed/components/PlayGame.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nconst PlayGame = ({onGame, onChangeScore}) => {\n  const [defaultData] = useState('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.');\n  const [dataTyping, setDataTyping] = useState([]);\n  const [textTyping, setTextTyping] = useState({\n    value: '',\n    position: 0\n  });\n    useEffect(() => {\n      const addWord = (quantityAdd = 20) => {\n        const arrayDefaultData = defaultData.split(' ');\n        const gamingText = [];\n        for (let index = 0; index < quantityAdd; index++) {\n          const positionRandom = Math.floor(Math.random() * arrayDefaultData.length); \n          gamingText.push({\n            value: arrayDefaultData[positionRandom],\n            status: null\n          });\n        }\n        setDataTyping(gamingText);\n      }\n      if(dataTyping.length === 0 || textTyping.position > (dataTyping.length - 1)){\n        addWord();\n        setTextTyping({...textTyping, position: 0});\n      }\n      \n    }, [textTyping.position])\n    const handleChangeTyping = e => {\n        const valueInput = e.target.value;\n        if(!valueInput.includes(' ')){\n          setTextTyping({...textTyping, value: valueInput});\n        }else if(textTyping.value !== ''){\n          checkResult();\n        }\n    } \n    const checkResult = () => {\n      const dataCheck = dataTyping;\n      if(textTyping.value === dataCheck[textTyping.position].value){\n        dataCheck[textTyping.position].status = true;\n        onChangeScore(1);\n      }else{\n        dataCheck[textTyping.position].status = false;\n        onChangeScore(-1);\n      }\n      setDataTyping(dataCheck);\n      setTextTyping({value: '', position: textTyping.position + 1});\n    }\n  return (\n    <div className=\"playing\">\n        <ul className=\"list\">\n        {\n          (dataTyping).map((word, index) => \n            <li key={index} className={\n              word.status === true \n              ? 'true' \n              : word.status === false \n              ? 'false'\n              : ''\n          }>\n              {word.value}\n          </li>\n          )\n        }\n        </ul>\n    <div className=\"inputForm\">\n      <input type=\"text\" autoFocus value={textTyping.value} onChange={handleChangeTyping}/>\n    </div>\n  </div>\n  )\n}\nexport default PlayGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}