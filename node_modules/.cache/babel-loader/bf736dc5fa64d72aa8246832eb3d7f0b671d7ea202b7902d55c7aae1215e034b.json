{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\ReactionTime\\\\ReactionTime.jsx\",\n  _s = $RefreshSig$();\n// ReactionTime.js\n\nimport React, { useState } from 'react';\nimport './ReactionTime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactionTime = () => {\n  _s();\n  const [screen, setScreen] = useState('main-menu');\n  const [reactionTime, setReactionTime] = useState(null);\n  const startGame = () => {\n    setScreen('waiting-for-green');\n    setTimeout(() => {\n      setScreen('green');\n      setReactionTime(Date.now());\n    }, Math.floor(Math.random() * 4000 + 3000));\n  };\n  const displayReactionTime = () => {\n    if (screen === 'green') {\n      const clickTime = Date.now();\n      const rt = clickTime - reactionTime;\n      setScreen('result');\n      setReactionTime(rt);\n    } else {\n      alert('Too soon.\\nClick to continue.');\n    }\n  };\n  const tryAgain = () => {\n    setScreen('main-menu');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `screen ${screen === 'main-menu' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reaction Time Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click as soon as you see the green color on the screen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `screen ${screen === 'waiting-for-green' ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wait for the green color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `screen clickable-area ${screen === 'green' ? 'active' : ''}`,\n      onClick: displayReactionTime,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: screen === 'green' ? 'Click Now!' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `screen result ${screen === 'result' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your reaction time: \", reactionTime, \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'yellow',\n          color: 'black'\n        },\n        onClick: tryAgain,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ReactionTime, \"Z50AWSZWTYlCg08PrAEoAhCMNA4=\");\n_c = ReactionTime;\nexport default ReactionTime;\nvar _c;\n$RefreshReg$(_c, \"ReactionTime\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReactionTime","_s","screen","setScreen","reactionTime","setReactionTime","startGame","setTimeout","Date","now","Math","floor","random","displayReactionTime","clickTime","rt","alert","tryAgain","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/ReactionTime/ReactionTime.jsx"],"sourcesContent":["// ReactionTime.js\r\n\r\nimport React, { useState } from 'react';\r\nimport './ReactionTime.css';\r\n\r\nconst ReactionTime = () => {\r\n    const [screen, setScreen] = useState('main-menu');\r\n    const [reactionTime, setReactionTime] = useState(null);\r\n\r\n    const startGame = () => {\r\n        setScreen('waiting-for-green');\r\n        setTimeout(() => {\r\n            setScreen('green');\r\n            setReactionTime(Date.now());\r\n        }, Math.floor(Math.random() * 4000 + 3000));\r\n    };\r\n\r\n    const displayReactionTime = () => {\r\n        if (screen === 'green') {\r\n            const clickTime = Date.now();\r\n            const rt = clickTime - reactionTime;\r\n            setScreen('result');\r\n            setReactionTime(rt);\r\n        } else {\r\n            alert('Too soon.\\nClick to continue.');\r\n        }\r\n    };\r\n\r\n    const tryAgain = () => {\r\n        setScreen('main-menu');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={`screen ${screen === 'main-menu' ? 'active' : ''}`}>\r\n                <h1>Reaction Time Test</h1>\r\n                <p>Click as soon as you see the green color on the screen.</p>\r\n                <button onClick={startGame}>Start</button>\r\n            </div>\r\n\r\n            <div className={`screen ${screen === 'waiting-for-green' ? 'active' : ''}`}>\r\n                <h1>Wait for the green color</h1>\r\n            </div>\r\n\r\n            <div\r\n                className={`screen clickable-area ${screen === 'green' ? 'active' : ''}`}\r\n                onClick={displayReactionTime}\r\n            >\r\n                <div className=\"message\">\r\n                    {screen === 'green' ? 'Click Now!' : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`screen result ${screen === 'result' ? 'active' : ''}`}>\r\n                <h2>Your reaction time: {reactionTime} ms</h2>\r\n                <button style={{ backgroundColor: 'yellow', color: 'black' }} onClick={tryAgain}>Try Again</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReactionTime;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}