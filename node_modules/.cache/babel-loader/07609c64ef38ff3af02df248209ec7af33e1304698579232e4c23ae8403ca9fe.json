{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\Hangman\\\\Hangman.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordList = ['apple', 'banana', 'orange', 'grape', 'kiwi', 'melon'];\nconst Hangman = () => {\n  _s();\n  const [word, setWord] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState(new Set());\n  const [guessesLeft, setGuessesLeft] = useState(6);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Selects a random word when the component mounts\n  useEffect(() => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    setWord(wordList[randomIndex]);\n  }, []);\n\n  // Checks if the game is over (win or lose)\n  useEffect(() => {\n    const wordSet = new Set(word);\n    const guessedSet = new Set(guessedLetters);\n    const intersection = new Set([...wordSet].filter(x => guessedSet.has(x)));\n    if (intersection.size === wordSet.size) {\n      // Win condition\n      setGameOver(true);\n    } else if (guessesLeft === 0) {\n      // Lose condition\n      setGameOver(true);\n    }\n  }, [word, guessedLetters, guessesLeft]);\n\n  // Handles a letter guess\n  const handleGuess = letter => {\n    if (!guessedLetters.has(letter)) {\n      setGuessedLetters(prev => new Set([...prev, letter]));\n      if (!word.includes(letter)) {\n        setGuessesLeft(prev => prev - 1);\n      }\n    }\n  };\n\n  // Renders the word with dashes for unguessed letters\n  const renderWord = () => {\n    return word.split('').map(letter => guessedLetters.has(letter) ? letter : '_').join(' ');\n  };\n\n  // Renders the game status\n  const renderStatus = () => {\n    if (gameOver) {\n      if (guessesLeft === 0) {\n        return 'You lose! The word was: ' + word;\n      } else {\n        return 'You win!';\n      }\n    } else {\n      return `Guesses left: ${guessesLeft}`;\n    }\n  };\n\n  // Renders the game interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderWord()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: renderStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Guessed Letters: \", Array.from(guessedLetters).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : Array.from(Array(26)).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGuess(String.fromCharCode(65 + index)),\n        children: String.fromCharCode(65 + index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Hangman, \"vDMHWRV8RTzpDiIMs6Cs4EuZeZU=\");\n_c = Hangman;\nexport default Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","wordList","Hangman","_s","word","setWord","guessedLetters","setGuessedLetters","Set","guessesLeft","setGuessesLeft","gameOver","setGameOver","randomIndex","Math","floor","random","length","wordSet","guessedSet","intersection","filter","x","has","size","handleGuess","letter","prev","includes","renderWord","split","map","join","renderStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","onClick","window","location","reload","_","index","String","fromCharCode","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/Hangman/Hangman.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst wordList = ['apple', 'banana', 'orange', 'grape', 'kiwi', 'melon'];\r\n\r\nconst Hangman = () => {\r\n  const [word, setWord] = useState('');\r\n  const [guessedLetters, setGuessedLetters] = useState(new Set());\r\n  const [guessesLeft, setGuessesLeft] = useState(6);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  // Selects a random word when the component mounts\r\n  useEffect(() => {\r\n    const randomIndex = Math.floor(Math.random() * wordList.length);\r\n    setWord(wordList[randomIndex]);\r\n  }, []);\r\n\r\n  // Checks if the game is over (win or lose)\r\n  useEffect(() => {\r\n    const wordSet = new Set(word);\r\n    const guessedSet = new Set(guessedLetters);\r\n    const intersection = new Set([...wordSet].filter(x => guessedSet.has(x)));\r\n\r\n    if (intersection.size === wordSet.size) {\r\n      // Win condition\r\n      setGameOver(true);\r\n    } else if (guessesLeft === 0) {\r\n      // Lose condition\r\n      setGameOver(true);\r\n    }\r\n  }, [word, guessedLetters, guessesLeft]);\r\n\r\n  // Handles a letter guess\r\n  const handleGuess = letter => {\r\n    if (!guessedLetters.has(letter)) {\r\n      setGuessedLetters(prev => new Set([...prev, letter]));\r\n      if (!word.includes(letter)) {\r\n        setGuessesLeft(prev => prev - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renders the word with dashes for unguessed letters\r\n  const renderWord = () => {\r\n    return word\r\n      .split('')\r\n      .map(letter =>\r\n        guessedLetters.has(letter) ? letter : '_'\r\n      )\r\n      .join(' ');\r\n  };\r\n\r\n  // Renders the game status\r\n  const renderStatus = () => {\r\n    if (gameOver) {\r\n      if (guessesLeft === 0) {\r\n        return 'You lose! The word was: ' + word;\r\n      } else {\r\n        return 'You win!';\r\n      }\r\n    } else {\r\n      return `Guesses left: ${guessesLeft}`;\r\n    }\r\n  };\r\n\r\n  // Renders the game interface\r\n  return (\r\n    <div>\r\n      <h1>Hangman</h1>\r\n      <div>\r\n        {renderWord()}\r\n      </div>\r\n      <div>\r\n        <p>{renderStatus()}</p>\r\n        <p>Guessed Letters: {Array.from(guessedLetters).join(', ')}</p>\r\n      </div>\r\n      <div>\r\n        {gameOver ? (\r\n          <button onClick={() => window.location.reload()}>Play Again</button>\r\n        ) : (\r\n          Array.from(Array(26)).map((_, index) => (\r\n            <button key={index} onClick={() => handleGuess(String.fromCharCode(65 + index))}>\r\n              {String.fromCharCode(65 + index)}\r\n            </button>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hangman;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}