{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\MemoryGame\\\\MemoryGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MemoryGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryGame = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [totalFlips, setTotalFlips] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const [loop, setLoop] = useState(null);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const startGame = () => {\n      setGameStarted(true);\n      const newLoop = setInterval(() => {\n        setTotalTime(prevTime => prevTime + 1);\n      }, 1000);\n      setLoop(newLoop);\n    };\n    const endGame = () => {\n      clearInterval(loop);\n      setTimeout(() => {\n        resetGame();\n      }, 5000);\n    };\n    const resetGame = () => {\n      setGameStarted(false);\n      setFlippedCards([]);\n      setTotalFlips(0);\n      setTotalTime(0);\n      clearInterval(loop);\n      generateGame();\n    };\n    const flipCard = card => {\n      if (!gameStarted) {\n        startGame();\n      }\n      if (flippedCards.length < 2 && !card.flipped) {\n        const newCards = cards.map(c => c.id === card.id ? {\n          ...c,\n          flipped: true\n        } : c);\n        setCards(newCards);\n        setFlippedCards([...flippedCards, card]);\n        setTotalFlips(totalFlips + 1);\n      }\n    };\n    generateGame();\n    return () => {\n      clearInterval(loop);\n    };\n  }, []);\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      const [firstCard, secondCard] = flippedCards;\n      if (firstCard.emoji === secondCard.emoji) {\n        const newCards = cards.map(c => c.id === firstCard.id || c.id === secondCard.id ? {\n          ...c,\n          matched: true\n        } : c);\n        setCards(newCards);\n      }\n      setTimeout(() => {\n        const newCards = cards.map(c => c.id === firstCard.id || c.id === secondCard.id ? {\n          ...c,\n          flipped: false\n        } : c);\n        setCards(newCards);\n        setFlippedCards([]);\n      }, 1000);\n    }\n  }, [flippedCards]);\n  const shuffle = array => {\n    const clonedArray = [...array];\n    for (let i = clonedArray.length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      const original = clonedArray[i];\n      clonedArray[i] = clonedArray[randomIndex];\n      clonedArray[randomIndex] = original;\n    }\n    return clonedArray;\n  };\n  const pickRandom = (array, items) => {\n    const clonedArray = [...array];\n    const randomPicks = [];\n    for (let i = 0; i < items; i++) {\n      const randomIndex = Math.floor(Math.random() * clonedArray.length);\n      randomPicks.push(clonedArray[randomIndex]);\n      clonedArray.splice(randomIndex, 1);\n    }\n    return randomPicks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MG-con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GAME\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CONTROLS\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moves\",\n              children: [totalFlips, \" moves\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: [\"Time: \", totalTime, \" sec\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board_container\",\n          children: generateGame()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(MemoryGame, \"/wY3BHUZS6OOeNwgi4QW/bey7QI=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemoryGame","_s","gameStarted","setGameStarted","flippedCards","setFlippedCards","totalFlips","setTotalFlips","totalTime","setTotalTime","loop","setLoop","cards","setCards","startGame","newLoop","setInterval","prevTime","endGame","clearInterval","setTimeout","resetGame","generateGame","flipCard","card","length","flipped","newCards","map","c","id","firstCard","secondCard","emoji","matched","shuffle","array","clonedArray","i","randomIndex","Math","floor","random","original","pickRandom","items","randomPicks","push","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/MemoryGame/MemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MemoryGame.css';\r\n\r\nconst MemoryGame = () => {\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [totalFlips, setTotalFlips] = useState(0);\r\n    const [totalTime, setTotalTime] = useState(0);\r\n    const [loop, setLoop] = useState(null);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        const startGame = () => {\r\n            setGameStarted(true);\r\n            const newLoop = setInterval(() => {\r\n                setTotalTime(prevTime => prevTime + 1);\r\n            }, 1000);\r\n            setLoop(newLoop);\r\n        };\r\n\r\n        const endGame = () => {\r\n            clearInterval(loop);\r\n            setTimeout(() => {\r\n                resetGame();\r\n            }, 5000);\r\n        };\r\n\r\n        const resetGame = () => {\r\n            setGameStarted(false);\r\n            setFlippedCards([]);\r\n            setTotalFlips(0);\r\n            setTotalTime(0);\r\n            clearInterval(loop);\r\n            generateGame();\r\n        };\r\n\r\n        const flipCard = card => {\r\n            if (!gameStarted) {\r\n                startGame();\r\n            }\r\n            if (flippedCards.length < 2 && !card.flipped) {\r\n                const newCards = cards.map(c =>\r\n                    c.id === card.id ? { ...c, flipped: true } : c\r\n                );\r\n                setCards(newCards);\r\n                setFlippedCards([...flippedCards, card]);\r\n                setTotalFlips(totalFlips + 1);\r\n            }\r\n        };\r\n\r\n        generateGame();\r\n\r\n        return () => {\r\n            clearInterval(loop);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (flippedCards.length === 2) {\r\n            const [firstCard, secondCard] = flippedCards;\r\n            if (firstCard.emoji === secondCard.emoji) {\r\n                const newCards = cards.map(c =>\r\n                    c.id === firstCard.id || c.id === secondCard.id\r\n                        ? { ...c, matched: true }\r\n                        : c\r\n                );\r\n                setCards(newCards);\r\n            }\r\n            setTimeout(() => {\r\n                const newCards = cards.map(c =>\r\n                    c.id === firstCard.id || c.id === secondCard.id\r\n                        ? { ...c, flipped: false }\r\n                        : c\r\n                );\r\n                setCards(newCards);\r\n                setFlippedCards([]);\r\n            }, 1000);\r\n        }\r\n    }, [flippedCards]);\r\n\r\n    const shuffle = array => {\r\n        const clonedArray = [...array];\r\n\r\n        for (let i = clonedArray.length - 1; i > 0; i--) {\r\n            const randomIndex = Math.floor(Math.random() * (i + 1));\r\n            const original = clonedArray[i];\r\n\r\n            clonedArray[i] = clonedArray[randomIndex];\r\n            clonedArray[randomIndex] = original;\r\n        }\r\n        return clonedArray;\r\n    };\r\n\r\n    const pickRandom = (array, items) => {\r\n        const clonedArray = [...array];\r\n        const randomPicks = [];\r\n\r\n        for (let i = 0; i < items; i++) {\r\n            const randomIndex = Math.floor(Math.random() * clonedArray.length);\r\n\r\n            randomPicks.push(clonedArray[randomIndex]);\r\n            clonedArray.splice(randomIndex, 1);\r\n        }\r\n        return randomPicks;\r\n    };\r\n\r\n    return (\r\n        <div className='MG-con'>\r\n        <div className=\"container\">\r\n            <div className=\"start-container\">\r\n                <button className=\"start-button\">Start</button>\r\n            </div>\r\n            <div className=\"GAME\">\r\n                <div className=\"CONTROLS\">\r\n                    <div className=\"stats\">\r\n                        <div className=\"moves\">{totalFlips} moves</div>\r\n                        <div className=\"timer\">Time: {totalTime} sec</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"board_container\">{generateGame()}</div>\r\n\r\n                <div className=\"win\"></div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemoryGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}