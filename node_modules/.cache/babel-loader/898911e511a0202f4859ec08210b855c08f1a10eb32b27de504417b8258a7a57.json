{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\MemoryGame\\\\MemoryGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MemoryGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryGame = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [flippedCards, setFlippedCards] = useState(0);\n  const [totalFlips, setTotalFlips] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const [loop, setLoop] = useState(null);\n  useEffect(() => {\n    const generateGame = () => {\n      const dimensions = 4; // Adjust as needed\n\n      if (dimensions % 2 !== 0) {\n        throw new Error(\"The dimension of the board must be an even number.\");\n      }\n      const emojis = ['🍐', '🍊', '🍋', '🍉', '🍇', '🍓', '🥑', '🥕', '🌽', '🥬'];\n      const picks = pickRandom(emojis, dimensions * dimensions / 2);\n      const items = shuffle([...picks, ...picks]);\n      const cards = items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-back\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        style: {\n          gridTemplateColumns: `repeat(${dimensions}, auto)`\n        },\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    };\n    const startGame = () => {\n      setGameStarted(true);\n      const newLoop = setInterval(() => {\n        setTotalTime(prevTime => prevTime + 1);\n        setTotalFlips(flips => flips + 1);\n      }, 1000);\n      setLoop(newLoop);\n    };\n    const endGame = () => {\n      clearInterval(loop);\n      setTimeout(() => {\n        resetGame();\n      }, 5000);\n    };\n    const resetCards = () => {\n      document.querySelectorAll('.card').forEach(card => {\n        card.classList.remove('flipped', 'matched');\n      });\n    };\n    const resetGame = () => {\n      setGameStarted(false);\n      setFlippedCards(0);\n      setTotalFlips(0);\n      setTotalTime(0);\n      clearInterval(loop);\n      resetCards();\n    };\n    const flipBackCards = () => {\n      document.querySelectorAll('.card:not(.matched)').forEach(card => {\n        card.classList.remove('flipped');\n      });\n      setFlippedCards(0);\n    };\n    const flipCard = card => {\n      setFlippedCards(prevFlips => prevFlips + 1);\n      setTotalFlips(prevFlips => prevFlips + 1);\n      if (!gameStarted) {\n        startGame();\n      }\n      if (flippedCards <= 2) {\n        card.classList.add('flipped');\n      }\n      if (flippedCards === 2) {\n        const flippedCards = document.querySelectorAll('.flipped:not(.matched)');\n        if (flippedCards[0].innerText === flippedCards[1].innerText) {\n          flippedCards[0].classList.add('matched');\n          flippedCards[1].classList.add('matched');\n        }\n        setTimeout(() => {\n          flipBackCards();\n        }, 1000);\n      }\n      if (!document.querySelectorAll('.card:not(.flipped)').length) {\n        setTimeout(() => {\n          document.querySelector('.win').innerHTML = `\n                        <span class=\"win-text\">\n                            You won!<br />\n                            with <span class=\"highlight\">${totalFlips}</span> moves<br />\n                            under <span class=\"highlight\">${totalTime}</span> seconds\n                        </span>\n                    `;\n          clearInterval(loop);\n          setTimeout(() => {\n            endGame();\n          }, 1000);\n        }, 1000);\n      }\n    };\n    const attachEventListeners = () => {\n      document.querySelector('.start-button').addEventListener('click', event => {\n        resetGame();\n        startGame();\n      });\n      document.addEventListener('click', event => {\n        const eventTarget = event.target;\n        const eventParent = eventTarget.parentElement;\n        if (eventTarget.className.includes('card') && !eventParent.classList.contains('flipped')) {\n          flipCard(eventParent);\n        }\n      });\n    };\n    generateGame();\n    attachEventListeners();\n    return () => {\n      clearInterval(loop);\n    };\n  }, []);\n  const shuffle = array => {\n    const clonedArray = [...array];\n    for (let i = clonedArray.length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      const original = clonedArray[i];\n      clonedArray[i] = clonedArray[randomIndex];\n      clonedArray[randomIndex] = original;\n    }\n    return clonedArray;\n  };\n  const pickRandom = (array, items) => {\n    const clonedArray = [...array];\n    const randomPicks = [];\n    for (let i = 0; i < items; i++) {\n      const randomIndex = Math.floor(Math.random() * clonedArray.length);\n      randomPicks.push(clonedArray[randomIndex]);\n      clonedArray.splice(randomIndex, 1);\n    }\n    return randomPicks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MG-con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GAME\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CONTROLS\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moves\",\n              children: [totalFlips, \" moves\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: [\"Time: \", totalTime, \" sec\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board_container\",\n          children: generateGame()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(MemoryGame, \"r4mJfcQIlqJ9KtQP/FgXdoKUScw=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemoryGame","_s","gameStarted","setGameStarted","flippedCards","setFlippedCards","totalFlips","setTotalFlips","totalTime","setTotalTime","loop","setLoop","generateGame","dimensions","Error","emojis","picks","pickRandom","items","shuffle","cards","map","item","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","startGame","newLoop","setInterval","prevTime","flips","endGame","clearInterval","setTimeout","resetGame","resetCards","document","querySelectorAll","forEach","card","classList","remove","flipBackCards","flipCard","prevFlips","add","innerText","length","querySelector","innerHTML","attachEventListeners","addEventListener","event","eventTarget","target","eventParent","parentElement","includes","contains","array","clonedArray","i","randomIndex","Math","floor","random","original","randomPicks","push","splice","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/MemoryGame/MemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MemoryGame.css';\r\n\r\nconst MemoryGame = () => {\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [flippedCards, setFlippedCards] = useState(0);\r\n    const [totalFlips, setTotalFlips] = useState(0);\r\n    const [totalTime, setTotalTime] = useState(0);\r\n    const [loop, setLoop] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const generateGame = () => {\r\n            const dimensions = 4; // Adjust as needed\r\n\r\n            if (dimensions % 2 !== 0) {\r\n                throw new Error(\"The dimension of the board must be an even number.\");\r\n            }\r\n\r\n            const emojis = ['🍐', '🍊', '🍋', '🍉', '🍇', '🍓', '🥑', '🥕', '🌽', '🥬'];\r\n            const picks = pickRandom(emojis, (dimensions * dimensions) / 2);\r\n            const items = shuffle([...picks, ...picks]);\r\n            const cards = items.map((item, index) => (\r\n                <div className=\"card\" key={index}>\r\n                    <div className=\"card-front\"></div>\r\n                    <div className=\"card-back\">{item}</div>\r\n                </div>\r\n            ));\r\n\r\n            return (\r\n                <div className=\"board\" style={{ gridTemplateColumns: `repeat(${dimensions}, auto)` }}>\r\n                    {cards}\r\n                </div>\r\n            );\r\n        };\r\n\r\n        const startGame = () => {\r\n            setGameStarted(true);\r\n            const newLoop = setInterval(() => {\r\n                setTotalTime(prevTime => prevTime + 1);\r\n                setTotalFlips(flips => flips + 1);\r\n            }, 1000);\r\n            setLoop(newLoop);\r\n        };\r\n\r\n        const endGame = () => {\r\n            clearInterval(loop);\r\n            setTimeout(() => {\r\n                resetGame();\r\n            }, 5000);\r\n        };\r\n\r\n        const resetCards = () => {\r\n            document.querySelectorAll('.card').forEach(card => {\r\n                card.classList.remove('flipped', 'matched');\r\n            });\r\n        };\r\n\r\n        const resetGame = () => {\r\n            setGameStarted(false);\r\n            setFlippedCards(0);\r\n            setTotalFlips(0);\r\n            setTotalTime(0);\r\n\r\n            clearInterval(loop);\r\n            resetCards();\r\n        };\r\n\r\n        const flipBackCards = () => {\r\n            document.querySelectorAll('.card:not(.matched)').forEach(card => {\r\n                card.classList.remove('flipped');\r\n            });\r\n            setFlippedCards(0);\r\n        };\r\n\r\n        const flipCard = card => {\r\n            setFlippedCards(prevFlips => prevFlips + 1);\r\n            setTotalFlips(prevFlips => prevFlips + 1);\r\n\r\n            if (!gameStarted) {\r\n                startGame();\r\n            }\r\n            if (flippedCards <= 2) {\r\n                card.classList.add('flipped');\r\n            }\r\n            if (flippedCards === 2) {\r\n                const flippedCards = document.querySelectorAll('.flipped:not(.matched)');\r\n                if (flippedCards[0].innerText === flippedCards[1].innerText) {\r\n                    flippedCards[0].classList.add('matched');\r\n                    flippedCards[1].classList.add('matched');\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    flipBackCards();\r\n                }, 1000);\r\n            }\r\n            if (!document.querySelectorAll('.card:not(.flipped)').length) {\r\n                setTimeout(() => {\r\n                    document.querySelector('.win').innerHTML = `\r\n                        <span class=\"win-text\">\r\n                            You won!<br />\r\n                            with <span class=\"highlight\">${totalFlips}</span> moves<br />\r\n                            under <span class=\"highlight\">${totalTime}</span> seconds\r\n                        </span>\r\n                    `;\r\n                    clearInterval(loop);\r\n                    setTimeout(() => {\r\n                        endGame();\r\n                    }, 1000);\r\n                }, 1000);\r\n            }\r\n        };\r\n\r\n        const attachEventListeners = () => {\r\n            document.querySelector('.start-button').addEventListener('click', event => {\r\n                resetGame();\r\n                startGame();\r\n            });\r\n\r\n            document.addEventListener('click', event => {\r\n                const eventTarget = event.target;\r\n                const eventParent = eventTarget.parentElement;\r\n\r\n                if (eventTarget.className.includes('card') && !eventParent.classList.contains('flipped')) {\r\n                    flipCard(eventParent);\r\n                }\r\n            });\r\n        };\r\n\r\n        generateGame();\r\n        attachEventListeners();\r\n\r\n        return () => {\r\n            clearInterval(loop);\r\n        };\r\n    }, []);\r\n\r\n    const shuffle = array => {\r\n        const clonedArray = [...array];\r\n\r\n        for (let i = clonedArray.length - 1; i > 0; i--) {\r\n            const randomIndex = Math.floor(Math.random() * (i + 1));\r\n            const original = clonedArray[i];\r\n\r\n            clonedArray[i] = clonedArray[randomIndex];\r\n            clonedArray[randomIndex] = original;\r\n        }\r\n        return clonedArray;\r\n    };\r\n\r\n    const pickRandom = (array, items) => {\r\n        const clonedArray = [...array];\r\n        const randomPicks = [];\r\n\r\n        for (let i = 0; i < items; i++) {\r\n            const randomIndex = Math.floor(Math.random() * clonedArray.length);\r\n\r\n            randomPicks.push(clonedArray[randomIndex]);\r\n            clonedArray.splice(randomIndex, 1);\r\n        }\r\n        return randomPicks;\r\n    };\r\n\r\n    return (\r\n        <div className='MG-con'>\r\n        <div className=\"container\">\r\n            <div className=\"start-container\">\r\n                <button className=\"start-button\">Start</button>\r\n            </div>\r\n            <div className=\"GAME\">\r\n                <div className=\"CONTROLS\">\r\n                    <div className=\"stats\">\r\n                        <div className=\"moves\">{totalFlips} moves</div>\r\n                        <div className=\"timer\">Time: {totalTime} sec</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"board_container\">{generateGame()}</div>\r\n\r\n                <div className=\"win\"></div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemoryGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}