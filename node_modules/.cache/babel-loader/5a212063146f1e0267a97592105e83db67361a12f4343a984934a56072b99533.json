{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\ReactionTime\\\\ReactionTime.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [greenDisplayed, setGreenDisplayed] = useState(false);\n  const [waitingForStart, setWaitingForStart] = useState(true);\n  const [waitingForGreen, setWaitingForGreen] = useState(false);\n  const [scores, setScores] = useState([]);\n  const [reactionTime, setReactionTime] = useState(0);\n  const [timerId, setTimerId] = useState(null);\n  const setGreenColor = () => {\n    const delay = Math.floor(Math.random() * 4000 + 3000);\n    const timeNow = Date.now();\n    setTimerId(setTimeout(() => {\n      setReactionTime(timeNow + delay);\n      setGreenDisplayed(true);\n    }, delay));\n  };\n  const startGame = () => {\n    setWaitingForGreen(true);\n    setWaitingForStart(false);\n    setGreenDisplayed(false);\n  };\n  const displayReactionTime = () => {\n    const clickTime = Date.now();\n    const reactionTimeMs = clickTime - reactionTime;\n    setScores(prevScores => [...prevScores, reactionTimeMs]);\n    if (scores.length >= 2) {\n      endGame();\n    } else {\n      startGame();\n    }\n  };\n  const endGame = () => {\n    clearTimeout(timerId); // Clear the timeout to prevent memory leaks\n    let total = scores.reduce((acc, cur) => acc + cur, 0);\n    const averageScore = Math.round(total / scores.length);\n    alert(`Your average reaction time: ${averageScore} ms`);\n    setScores([]);\n    startGame();\n  };\n  const displayTooSoon = () => {\n    alert('Too Soon');\n    startGame();\n  };\n  const handleClick = () => {\n    if (greenDisplayed) {\n      displayReactionTime();\n    } else if (waitingForStart) {\n      startGame();\n    } else if (waitingForGreen) {\n      displayTooSoon();\n    }\n  };\n  useEffect(() => {\n    return () => clearTimeout(timerId); // Cleanup on unmount\n  }, [timerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-menu ${waitingForStart ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reaction Time Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click as soon as you see the green color on the screen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click anywhere to start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `clickable-area ${greenDisplayed ? 'green' : ''}`,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: greenDisplayed ? 'Click Now!' : 'Wait for the Green Color.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"seKbIOoXo40MVG7ng1qhBOhEz/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","greenDisplayed","setGreenDisplayed","waitingForStart","setWaitingForStart","waitingForGreen","setWaitingForGreen","scores","setScores","reactionTime","setReactionTime","timerId","setTimerId","setGreenColor","delay","Math","floor","random","timeNow","Date","now","setTimeout","startGame","displayReactionTime","clickTime","reactionTimeMs","prevScores","length","endGame","clearTimeout","total","reduce","acc","cur","averageScore","round","alert","displayTooSoon","handleClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/ReactionTime/ReactionTime.jsx"],"sourcesContent":["// App.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [greenDisplayed, setGreenDisplayed] = useState(false);\r\n  const [waitingForStart, setWaitingForStart] = useState(true);\r\n  const [waitingForGreen, setWaitingForGreen] = useState(false);\r\n  const [scores, setScores] = useState([]);\r\n  const [reactionTime, setReactionTime] = useState(0);\r\n  const [timerId, setTimerId] = useState(null);\r\n\r\n  const setGreenColor = () => {\r\n    const delay = Math.floor(Math.random() * 4000 + 3000);\r\n    const timeNow = Date.now();\r\n    setTimerId(setTimeout(() => {\r\n      setReactionTime(timeNow + delay);\r\n      setGreenDisplayed(true);\r\n    }, delay));\r\n  };\r\n\r\n  const startGame = () => {\r\n    setWaitingForGreen(true);\r\n    setWaitingForStart(false);\r\n    setGreenDisplayed(false);\r\n  };\r\n\r\n  const displayReactionTime = () => {\r\n    const clickTime = Date.now();\r\n    const reactionTimeMs = clickTime - reactionTime;\r\n    setScores(prevScores => [...prevScores, reactionTimeMs]);\r\n    if (scores.length >= 2) {\r\n      endGame();\r\n    } else {\r\n      startGame();\r\n    }\r\n  };\r\n\r\n  const endGame = () => {\r\n    clearTimeout(timerId); // Clear the timeout to prevent memory leaks\r\n    let total = scores.reduce((acc, cur) => acc + cur, 0);\r\n    const averageScore = Math.round(total / scores.length);\r\n    alert(`Your average reaction time: ${averageScore} ms`);\r\n    setScores([]);\r\n    startGame();\r\n  };\r\n\r\n  const displayTooSoon = () => {\r\n    alert('Too Soon');\r\n    startGame();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (greenDisplayed) {\r\n      displayReactionTime();\r\n    } else if (waitingForStart) {\r\n      startGame();\r\n    } else if (waitingForGreen) {\r\n      displayTooSoon();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => clearTimeout(timerId); // Cleanup on unmount\r\n  }, [timerId]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={`main-menu ${waitingForStart ? 'active' : ''}`}>\r\n        <h1>Reaction Time Test</h1>\r\n        <p>Click as soon as you see the green color on the screen.</p>\r\n        <p>Click anywhere to start.</p>\r\n      </div>\r\n\r\n      <div\r\n        className={`clickable-area ${greenDisplayed ? 'green' : ''}`}\r\n        onClick={handleClick}\r\n      >\r\n        <div className=\"message\">\r\n          {greenDisplayed ? 'Click Now!' : 'Wait for the Green Color.'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}