{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santa\\\\Desktop\\\\Major\\\\BenchmarkYou\\\\benchmark-you\\\\src\\\\Pages\\\\Games\\\\ReactionTime\\\\ReactionTime.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\nimport React, { useState } from 'react';\nimport './ReactionTime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [greenDisplayed, setGreenDisplayed] = useState(false);\n  const [waitingForStart, setWaitingForStart] = useState(true);\n  const [waitingForGreen, setWaitingForGreen] = useState(false);\n  const [scores, setScores] = useState([]);\n  const [reactionTime, setReactionTime] = useState(0);\n  useEffect(() => {\n    if (waitingForGreen) {\n      setGreenDisplayed(true);\n      const timeout = setTimeout(() => {\n        setReactionTime(Date.now());\n        setGreenDisplayed(false);\n      }, Math.floor(Math.random() * 4000 + 3000));\n      return () => clearTimeout(timeout);\n    }\n  }, [waitingForGreen]);\n  const startGame = () => {\n    setWaitingForStart(false);\n    setWaitingForGreen(true);\n  };\n  const displayReactionTime = () => {\n    const clickTime = Date.now();\n    const rt = clickTime - reactionTime;\n    setScores([...scores, rt]);\n    if (scores.length >= 2) {\n      endGame();\n    } else {\n      setWaitingForGreen(true);\n    }\n  };\n  const endGame = () => {\n    let total = 0;\n    scores.forEach(s => {\n      total += s;\n    });\n    const averageScore = Math.round(total / scores.length);\n    alert(`Your average reaction time: ${averageScore} ms`);\n    setScores([]);\n    setWaitingForStart(true);\n  };\n  const handleClick = () => {\n    if (greenDisplayed) {\n      displayReactionTime();\n    } else if (waitingForStart) {\n      startGame();\n    } else if (waitingForGreen) {\n      alert('Too Soon');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-menu ${waitingForStart ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reaction Time Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click as soon as you see the green color on the screen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click anywhere to start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `clickable-area ${greenDisplayed ? 'green' : ''}`,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: greenDisplayed ? 'Click Now!' : 'Wait for the Green Color.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"Gip2R48frhmzoFaCUZU8HaRwI4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","greenDisplayed","setGreenDisplayed","waitingForStart","setWaitingForStart","waitingForGreen","setWaitingForGreen","scores","setScores","reactionTime","setReactionTime","useEffect","timeout","setTimeout","Date","now","Math","floor","random","clearTimeout","startGame","displayReactionTime","clickTime","rt","length","endGame","total","forEach","s","averageScore","round","alert","handleClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santa/Desktop/Major/BenchmarkYou/benchmark-you/src/Pages/Games/ReactionTime/ReactionTime.jsx"],"sourcesContent":["// App.jsx\r\nimport React, { useState } from 'react';\r\nimport './ReactionTime.css';\r\n\r\nconst App = () => {\r\n    const [greenDisplayed, setGreenDisplayed] = useState(false);\r\n    const [waitingForStart, setWaitingForStart] = useState(true);\r\n    const [waitingForGreen, setWaitingForGreen] = useState(false);\r\n    const [scores, setScores] = useState([]);\r\n    const [reactionTime, setReactionTime] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      if (waitingForGreen) {\r\n        setGreenDisplayed(true);\r\n        const timeout = setTimeout(() => {\r\n          setReactionTime(Date.now());\r\n          setGreenDisplayed(false);\r\n        }, Math.floor(Math.random() * 4000 + 3000));\r\n        return () => clearTimeout(timeout);\r\n      }\r\n    }, [waitingForGreen]);\r\n  \r\n    const startGame = () => {\r\n      setWaitingForStart(false);\r\n      setWaitingForGreen(true);\r\n    };\r\n  \r\n    const displayReactionTime = () => {\r\n      const clickTime = Date.now();\r\n      const rt = clickTime - reactionTime;\r\n      setScores([...scores, rt]);\r\n      if (scores.length >= 2) {\r\n        endGame();\r\n      } else {\r\n        setWaitingForGreen(true);\r\n      }\r\n    };\r\n  \r\n    const endGame = () => {\r\n      let total = 0;\r\n      scores.forEach((s) => {\r\n        total += s;\r\n      });\r\n      const averageScore = Math.round(total / scores.length);\r\n      alert(`Your average reaction time: ${averageScore} ms`);\r\n      setScores([]);\r\n      setWaitingForStart(true);\r\n    };\r\n  \r\n    const handleClick = () => {\r\n      if (greenDisplayed) {\r\n        displayReactionTime();\r\n      } else if (waitingForStart) {\r\n        startGame();\r\n      } else if (waitingForGreen) {\r\n        alert('Too Soon');\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <div className={`main-menu ${waitingForStart ? 'active' : ''}`}>\r\n          <h1>Reaction Time Test</h1>\r\n          <p>Click as soon as you see the green color on the screen.</p>\r\n          <p>Click anywhere to start.</p>\r\n        </div>\r\n  \r\n        <div\r\n          className={`clickable-area ${greenDisplayed ? 'green' : ''}`}\r\n          onClick={handleClick}\r\n        >\r\n          <div className=\"message\">\r\n            {greenDisplayed ? 'Click Now!' : 'Wait for the Green Color.'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}